"""Adjusting timezone aware datetime fields in DB.

Revision ID: 280310142b77
Revises: 4e43f7aaea30
Create Date: 2025-02-16 11:03:18.519419

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '280310142b77'
down_revision: Union[str, None] = '4e43f7aaea30'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.alter_column('processed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.alter_column('uploaded_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('processed',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.alter_column('expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.alter_column('generated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.alter_column('expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('generated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text('now()'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.alter_column('processed',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('uploaded_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.alter_column('processed_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    # ### end Alembic commands ###
