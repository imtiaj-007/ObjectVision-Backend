"""Modified ActiveUserPlans table, set time fields with timezone aware formats.

Revision ID: b0ac69bfd56b
Revises: 0fecffb7b845
Create Date: 2025-03-02 16:45:29.131765

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b0ac69bfd56b'
down_revision: Union[str, None] = '0fecffb7b845'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('active_user_plans', schema=None) as batch_op:
        batch_op.alter_column('expiry_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('backup_till',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.add_column(sa.Column('daily_usage', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('total_usage', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('daily_limit', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('total_limit', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('max_size', sa.Integer(), nullable=True))
        batch_op.drop_column('used')
        batch_op.drop_column('limit')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.add_column(sa.Column('limit', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('used', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_column('max_size')
        batch_op.drop_column('total_limit')
        batch_op.drop_column('daily_limit')
        batch_op.drop_column('total_usage')
        batch_op.drop_column('daily_usage')

    with op.batch_alter_table('active_user_plans', schema=None) as batch_op:
        batch_op.alter_column('backup_till',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('expiry_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    # ### end Alembic commands ###
