"""Created 2 new tables ActiveUserPlans & UserActivity, to map a purchased plan with the user and then to track user activities for corresponding plans.

Revision ID: 36372bd89f5c
Revises: 4ce0cb41c237
Create Date: 2025-03-01 19:47:35.411170

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36372bd89f5c'
down_revision: Union[str, None] = '4ce0cb41c237'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('active_user_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('plan_name', sa.Text(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False, default=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('backup_till', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plan.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('active_user_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_active_user_plans_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_active_user_plans_plan_id'), ['plan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_active_user_plans_plan_name'), ['plan_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_active_user_plans_user_id'), ['user_id'], unique=False)

    op.execute('ALTER TABLE active_user_plans ALTER COLUMN plan_name TYPE subscriptionplans USING plan_name::subscriptionplans')  

    op.create_table('user_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active_user_plan_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('STORAGE_USAGE', 'IMAGE_USAGE', 'VIDEO_USAGE', name='activitytypeenum'), nullable=False),
    sa.Column('used', sa.Integer(), nullable=False),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['active_user_plan_id'], ['active_user_plans.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_activity_active_user_plan_id'), ['active_user_plan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_activity_activity_type'), ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_activity_created_at'), ['created_at'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_activity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_activity_created_at'))
        batch_op.drop_index(batch_op.f('ix_user_activity_activity_type'))
        batch_op.drop_index(batch_op.f('ix_user_activity_active_user_plan_id'))

    op.drop_table('user_activity')
    with op.batch_alter_table('active_user_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_active_user_plans_user_id'))
        batch_op.drop_index(batch_op.f('ix_active_user_plans_plan_name'))
        batch_op.drop_index(batch_op.f('ix_active_user_plans_plan_id'))
        batch_op.drop_index(batch_op.f('ix_active_user_plans_created_at'))

    op.drop_table('active_user_plans')
    # ### end Alembic commands ###
