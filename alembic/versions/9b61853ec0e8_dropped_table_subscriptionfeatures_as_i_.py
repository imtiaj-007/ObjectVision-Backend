"""Dropped table SubscriptionFeatures as I don't need this, Updated subscription flow SubscriptionPlan[one] -> FeatureGroups[many] -> Features[many].

Revision ID: 9b61853ec0e8
Revises: 1c100ae2c325
Create Date: 2025-02-26 19:40:14.230646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b61853ec0e8'
down_revision: Union[str, None] = '1c100ae2c325'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscription_features', schema=None) as batch_op:
        batch_op.drop_index('ix_subscription_features_feature_id')
        batch_op.drop_index('ix_subscription_features_subscription_plan_id')

    op.drop_table('subscription_features')
    with op.batch_alter_table('feature_group', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subscription_plan_id', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_feature_group_subscription_plan_id'), ['subscription_plan_id'], unique=False)
        batch_op.create_foreign_key(None, 'subscription_plan', ['subscription_plan_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('features', schema=None) as batch_op:
        batch_op.add_column(sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.drop_column('default_value')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('features', schema=None) as batch_op:
        batch_op.add_column(sa.Column('default_value', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_column('value')

    with op.batch_alter_table('feature_group', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_feature_group_subscription_plan_id'))
        batch_op.drop_column('subscription_plan_id')

    op.create_table('subscription_features',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('subscription_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('feature_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], name='subscription_features_feature_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plan.id'], name='subscription_features_subscription_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subscription_features_pkey')
    )
    with op.batch_alter_table('subscription_features', schema=None) as batch_op:
        batch_op.create_index('ix_subscription_features_subscription_plan_id', ['subscription_plan_id'], unique=False)
        batch_op.create_index('ix_subscription_features_feature_id', ['feature_id'], unique=False)

    # ### end Alembic commands ###
