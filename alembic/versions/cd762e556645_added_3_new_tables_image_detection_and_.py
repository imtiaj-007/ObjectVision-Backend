"""Added 3 new tables Image, Detection and ProcessedImages for storing detection and image data.

Revision ID: cd762e556645
Revises: bbacf63567cc
Create Date: 2025-02-15 12:18:30.064223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'cd762e556645'
down_revision: Union[str, None] = 'bbacf63567cc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('image_metadata', sa.JSON(), nullable=True),
    sa.Column('local_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cloud_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("NOW()"), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('processed', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_id'), ['id'], unique=False)

    op.create_table('detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('class_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('bbox', sa.JSON(), nullable=True),
    sa.Column('segmentation_mask', sa.JSON(), nullable=True),
    sa.Column('probability', sa.JSON(), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("NOW()"), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_detections_id'), ['id'], unique=False)

    op.create_table('processed_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('local_processed_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cloud_processed_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('processed_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('generated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("NOW()"), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_processed_images_id'), ['id'], unique=False)

    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=30),
               server_default=sa.text("'email_verification'::character varying"),
               existing_nullable=False)
        batch_op.alter_column('is_used',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
        batch_op.alter_column('attempt_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.drop_constraint('otps_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], 
                                  onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('fk_users_updated_by', type_='foreignkey')
        batch_op.drop_constraint('fk_users_created_by', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['updated_by'], ['id'], ondelete='SET NULL')

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_users_created_by', 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_users_updated_by', 'users', ['updated_by'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('otps', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('otps_user_id_fkey', 'users', ['user_id'], ['id'], 
                                  onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('attempt_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('is_used',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=30),
               server_default=sa.text("'email_verification'::character varying"),
               existing_nullable=False)

    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_processed_images_id'))

    op.drop_table('processed_images')
    
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_detections_id'))

    op.drop_table('detections')
    
    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_id'))

    op.drop_table('images')