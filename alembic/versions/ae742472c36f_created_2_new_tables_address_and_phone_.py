"""Created 2 new tables Address and Phone Number, dropped mobile column from User table.

Revision ID: ae742472c36f
Revises: 436073762e72
Create Date: 2025-02-20 19:53:53.992245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ae742472c36f'
down_revision: Union[str, None] = '436073762e72'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address_line_1', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address_line_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state_province', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('type', sa.Enum('HOME', 'WORK', 'OTHER', name='contacttype'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_addresses_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_country_code'), ['country_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_state_province'), ['state_province'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_type'), ['type'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_user_id'), ['user_id'], unique=False)

    op.create_table('phone_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('type', sa.Enum('HOME', 'WORK', 'OTHER', name='contacttype'), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'phone_number', name='uq_user_phone')
    )
    with op.batch_alter_table('phone_numbers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_phone_numbers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_phone_numbers_phone_number'), ['phone_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_phone_numbers_type'), ['type'], unique=False)
        batch_op.create_index(batch_op.f('ix_phone_numbers_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_user_primary_phone', ['user_id'], unique=True, postgresql_where='is_primary = TRUE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('mobile')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mobile', sa.VARCHAR(length=15), autoincrement=False, nullable=True))

    with op.batch_alter_table('phone_numbers', schema=None) as batch_op:
        batch_op.drop_index('ix_user_primary_phone', postgresql_where='is_primary = TRUE')
        batch_op.drop_index(batch_op.f('ix_phone_numbers_user_id'))
        batch_op.drop_index(batch_op.f('ix_phone_numbers_type'))
        batch_op.drop_index(batch_op.f('ix_phone_numbers_phone_number'))
        batch_op.drop_index(batch_op.f('ix_phone_numbers_id'))

    op.drop_table('phone_numbers')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_addresses_user_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_type'))
        batch_op.drop_index(batch_op.f('ix_addresses_state_province'))
        batch_op.drop_index(batch_op.f('ix_addresses_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_country_code'))
        batch_op.drop_index(batch_op.f('ix_addresses_country'))
        batch_op.drop_index(batch_op.f('ix_addresses_city'))

    op.drop_table('addresses')
    # ### end Alembic commands ###
