"""Modified Detection, Image and Processed Image table schemas.

Revision ID: 5f4ee3b8b8f9
Revises: 280310142b77
Create Date: 2025-02-16 20:23:30.782463

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f4ee3b8b8f9'
down_revision: Union[str, None] = '280310142b77'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE modeltypeenum AS ENUM ('detection', 'segmentation', 'classification', 'pose')")
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.add_column(sa.Column('processed_image_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('parent_image_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('model_type', sa.Enum('DETECTION', 'SEGMENTATION', 'CLASSIFICATION', 'POSE', name='modeltypeenum'), nullable=False))
        batch_op.add_column(sa.Column('processing_time', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('model_size', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
        batch_op.add_column(sa.Column('confidence_threshold', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('device', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
        batch_op.add_column(sa.Column('predictions', sa.JSON(), nullable=False))
        batch_op.add_column(sa.Column('total_objects', sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f('ix_detections_parent_image_id'), ['parent_image_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_processed_at'), ['processed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_processed_image_id'), ['processed_image_id'], unique=False)
        batch_op.drop_constraint('detections_image_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'processed_images', ['processed_image_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'images', ['parent_image_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('segmentation_mask')
        batch_op.drop_column('summary')
        batch_op.drop_column('probability')
        batch_op.drop_column('bbox')
        batch_op.drop_column('image_id')
        batch_op.drop_column('class_name')
        batch_op.drop_column('confidence')

    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('original_image_id', sa.Integer(), nullable=False))
        batch_op.alter_column('cloud_processed_path',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_processed_images_generated_at'), ['generated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_processed_images_original_image_id'), ['original_image_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_processed_images_processed_type'), ['processed_type'], unique=False)
        batch_op.drop_constraint('processed_images_image_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'images', ['original_image_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('description')
        batch_op.drop_column('image_id')

    op.execute('''
        ALTER TABLE processed_images 
        ALTER COLUMN processed_type TYPE modeltypeenum 
        USING processed_type::text::modeltypeenum;
    ''')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('processed_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('processed_images_image_id_fkey', 'images', ['image_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_processed_images_processed_type'))
        batch_op.drop_index(batch_op.f('ix_processed_images_original_image_id'))
        batch_op.drop_index(batch_op.f('ix_processed_images_generated_at'))
        batch_op.alter_column('cloud_processed_path',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('original_image_id')
    
    op.execute('''
        ALTER TABLE processed_images 
        ALTER COLUMN processed_type TYPE VARCHAR 
        USING processed_type::text;
    ''')

    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.add_column(sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('class_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('bbox', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('probability', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('summary', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('segmentation_mask', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('detections_image_id_fkey', 'images', ['image_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_detections_processed_image_id'))
        batch_op.drop_index(batch_op.f('ix_detections_processed_at'))
        batch_op.drop_index(batch_op.f('ix_detections_parent_image_id'))
        batch_op.drop_column('total_objects')
        batch_op.drop_column('predictions')
        batch_op.drop_column('device')
        batch_op.drop_column('confidence_threshold')
        batch_op.drop_column('model_size')
        batch_op.drop_column('processing_time')
        batch_op.drop_column('model_type')
        batch_op.drop_column('parent_image_id')
        batch_op.drop_column('processed_image_id')

    op.execute("DROP TYPE modeltypeenum")
    # ### end Alembic commands ###
