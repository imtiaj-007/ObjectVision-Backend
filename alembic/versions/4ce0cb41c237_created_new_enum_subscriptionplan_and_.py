"""Created new enum SubscriptionPlan and altered columns of Order and SubscriptionPlan tables.

Revision ID: 4ce0cb41c237
Revises: eed50f145dea
Create Date: 2025-03-01 16:30:43.966952

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ce0cb41c237'
down_revision: Union[str, None] = 'eed50f145dea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE subscriptionplans AS ENUM ('BASIC', 'SILVER', 'GOLD')")
    
    op.execute('ALTER TABLE orders ALTER COLUMN plan_name TYPE subscriptionplans USING plan_name::subscriptionplans')        
    op.execute('ALTER TABLE subscription_plan ALTER COLUMN name TYPE subscriptionplans USING name::subscriptionplans')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscription_plan', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.Enum('BASIC', 'SILVER', 'GOLD', name='subscriptionplans'),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('plan_name',
               existing_type=sa.Enum('BASIC', 'SILVER', 'GOLD', name='subscriptionplans'),
               type_=sa.TEXT(),
               existing_nullable=False)

    op.execute("DROP TYPE subscriptionplans")

    # ### end Alembic commands ###
